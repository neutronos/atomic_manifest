NeutronOS
===========

Getting started
---------------

To get started with Android/NeutronOS, you'll need to get
familiar with [Repo](https://source.android.com/source/using-repo.html) and [Version Control with Git](https://source.android.com/source/version-control.html).

To initialize your local repository using the LineageOS trees, use a command like this:
```
repo init -u https://github.com/neutronos/atomic_manifest.git -b ten
```
Then to sync up:
```
repo sync --force-sync --current-branch --no-tags --no-clone-bundle --optimized-fetch --prune -j$(nproc --all)
```

Build
---------------

```bash

# Set up environment
$ . build/envsetup.sh

# Choose a target
$ lunch neutron_$device-userdebug

# Build the code
$ mka bacon | tee log
```

```
For devices with hardware keys, you need to add the following
---------------
```bash


Add these lines to <device_tree_path/overlay/frameworks/base/core/res/res/values/config.xml>

    <!-- Hardware 'face' keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
          1 - Home
          2 - Back
          4 - Menu
          8 - Assistant (search)
          16 - App switch
          32 - Camera
       For example, a device with Back, Home and AppSwitch keys would set this
       config to 19. -->
    <integer name="config_deviceHardwareKeys">72</integer>


    <!-- Hardware 'face' keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
          1 - Home
          2 - Back
          4 - Menu
          8 - Assistant (search)
          16 - App switch
          32 - Camera
       For example, a device with Back, Home and AppSwitch keys would set this
       config to 19. -->
    <integer name="config_deviceHardwareWakeKeys">72</integer>

    <!-- Button brightness -->
    <bool name="config_button_brightness_support">true</bool>
    <integer name="config_button_brightness_default">128</integer>

Numbers vary on how many hardware keys you have on your device. See the config description for how to add those.

```
Devices with alertsliders / custom key handlers
---------------
```bash
 You need to update your keyhandler class and paths to 

<device_tree_path/overlay/frameworks/base/res/res/values/config.xml>

# Like this 
    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system/priv-app/LineageParts/LineageParts.apk</item>
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
repo sync -f --force-sync --no-clone-bundle
        <item>org.lineageos.lineageparts.gestures.KeyHandler</item>
    </string-array>

--------------
Other configs and locations in device tree
---------------
```bash


Use these lines in <device_tree_path/overlay/frameworks/base/res/res/values/config.xml>
```
    <!-- Whether the device supports Smart Pixels --> 
    <bool name="config_supportSmartPixels">true</bool>

    <!-- Whether device has physical tri state switch -->
    <bool name="config_hasAlertSlider">true</bool>

    <!-- Enable face auth when swiping security view  
      for popup cameras-->
    <bool name="config_faceAuthOnSecurityView">true</bool>

    <!-- Whether device has warp charging support -->
    <bool name="config_hasWarpCharger">true</bool>

    <!-- Whether device has Dash charging support -->
    <bool name="config_hasDashCharger">true</bool>

    <!-- Whether device has VOOC charging support -->
    <bool name="config_hasVoocCharger">false</bool>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath" translatable="false"></string>
    <!-- Expected value from fast charging status file  -->
    <string name="config_oemFastChargerStatusValue" translatable="false"></string>

    <!-- Whether device supports variable refresh rate -->
    <bool name="config_hasVariableRefreshRate">true</bool>
    <!-- Default setting for refresh rate
      0 = Auto
      1 = 60HZ
      2 = 90Hz -->
    <integer name="config_defaultVariableRefreshRateSetting">2</integer>

    <!--Systeminfo for quick settings header -->
    <string name="config_sysCPUTemp">/sys/class/<path_to_option></string>
    <string name="config_sysBatteryTemp">/sys/class/power_supply/battery/temp</string>
    <string name="config_sysGPUFreq">/sys/kernel/gpu/gpu_clock</string>
    <string name="config_sysGPULoad">/sys/kernel/gpu/gpu_busy</string>
    <integer name="config_sysCPUTempMultiplier"><device_specific_mulitplyer></integer>
    <integer name="config_sysBatteryTempMultiplier"><device_specific_mulitplyer></integer>
    Replace <path_to_option> and <device_specific_mulitplyer> with own device specific paths

    <!-- If Smart charging supported by kernel and device sepolicy -->
    <bool name="config_smartChargingAvailable">true</bool>

Use these lines in <device_tree_path/overlay/packages/apps/Settings/res/values/config.xml>
```
    <!-- Use only if devices have variable intensity support for haptics-->
    <bool name="config_vibration_supports_multiple_intensities">true</bool>

    <!-- If device supports battery health options -->
    <bool name="config_supportBatteryHealth">true</bool>
    <string name="config_batChargeCycle">path</string>
    <string name="config_batDesCap">path</string>
    <string name="config_batCurCap">path</string>

    Replace path with device specific path

```

Please maintain proper authorship for all commits for above overlays
---------------
```bash
```

```

Lastly 
---------------
```bash
Remember to give credits where necessary
```

### That's all for now. ###

Happy building
---------------
```bash

Readme credits goes to <a href="">RR TEAM</a>
